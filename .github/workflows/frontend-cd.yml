name: Frontend Continuous Deployment

# Workflow Controls

on:
  workflow_dispatch:
  push:
    branches:
      - main

# Workflow jobs 

jobs:
  Lint:
    runs-on: ubuntu-20.04

    steps:
    - name: Check Code
      uses: actions/checkout@v3

    - name: Use Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci

    - name: Run Lint
      working-directory: starter/frontend
      run: npm run lint

  Test:
    runs-on: ubuntu-20.04

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json
        
    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci
  
    - name: Test
      working-directory: starter/frontend
      run: npm run test

# Build job which runs only if Lint and Test pass

  Build:
    needs: [Lint, Test]
    runs-on: ubuntu-20.04
    
    steps:
    - name: Check the Repository
      uses: actions/checkout@v3
    
    - name: Use Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to docker ECR Login 
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
          mask-password: 'false'
    

    - name: Build and Push Docker Image
      working-directory: starter/frontend
      env:
        IMAGE_TAG: latest
        REPO_NAME: frontend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag 669172573612.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG .
        docker push 669172573612.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
    

    - name: Configure Kubeconfig
      run:
       aws eks update-kubeconfig --name udacity --region us-east-1


    - name: Deploy Docker Image to Amazon EKS
      working-directory: starter/frontend/k8s
      env:
        IMAGE_TAG: latest
        REPO_NAME: frontend
      run: |
          kustomize edit set image frontend=669172573612.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
          kustomize build | kubectl apply -f -


#1