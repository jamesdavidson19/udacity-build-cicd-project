name: Frontend CD 

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Lint:
    runs-on: ubuntu-latest

    steps:
    - name: Check Code
      uses: actions/checkout@v3

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci

    - name: Checkout Run Lint
      run: cd starter/frontend && npm run lint

  Test:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json
        
    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci
  
    - name: Test
      run: cd starter/frontend && npm run test



  Build:
    needs: [Lint, Test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Check the Repository
      uses: actions/checkout@v3
    
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
  

    - name: Login to Amazon 
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2



    - name: Build and Push Docker Image
      id: build-and-push
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: frontend
        IMAGE_TAG: ${{ github.sha }}
      run: |
          cd starter/frontend
          docker build --no-cache --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 -t $REGISTRY/$REPOSITORY:frontend-$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:frontend-$IMAGE_TAG

          echo "::set-output name=REPOSITORY::$REPOSITORY"
          echo "::set-output name=IMAGE_TAG::frontend-$IMAGE_TAG"
    

    - name: Configure Kubeconfig
      run:
          aws eks update-kubeconfig --name cluster --region us-east-1


    - name: Deploy Docker Image to Amazon EKS
      working-directory: starter/frontend/k8s
      env:
        IMAGE_TAG: ${{ github.sha }}
        REPO_NAME: frontend
      run: |
          kustomize edit set image frontend=677218928690.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
          kustomize build | kubectl apply -f -
